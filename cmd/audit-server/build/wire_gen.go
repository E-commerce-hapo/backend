// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package build

import (
	"github.com/kiem-toan/application/category"
	category2 "github.com/kiem-toan/interface/controller/category"
	category3 "github.com/kiem-toan/interface/handler/category"
	"github.com/kiem-toan/pkg/config"
	"github.com/kiem-toan/pkg/database"
	"github.com/kiem-toan/pkg/event/dispatcher"
	"github.com/kiem-toan/pkg/integration/email"
)

// Injectors from wire.go:

func InitApp(cfg config.Config) (*App, error) {
	databaseDatabase := database.New(cfg)
	dispatcherDispatcher := dispatcher.NewDispatcher()
	client := email.New()
	categoryAggregate := category.NewCategoryAggregate(databaseDatabase, dispatcherDispatcher, client)
	categoryQuery := category.NewCategoryQuery(databaseDatabase)
	categoryService := category2.New(categoryAggregate, categoryQuery)
	categoryHandler := category3.New(categoryService)
	app := &App{
		Db:              databaseDatabase,
		CategoryService: categoryService,
		CategoryHandler: categoryHandler,
	}
	return app, nil
}

// wire.go:

type App struct {
	Db              *database.Database
	CategoryService *category2.CategoryService
	CategoryHandler *category3.CategoryHandler
}
